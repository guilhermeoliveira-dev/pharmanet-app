{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar warning = require(\"./warning\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactLegacyElement = require(\"./ReactLegacyElement\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\n\n/**\n * Given an `element` create an instance that will actually be mounted.\n *\n * @param {object} element\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(element, parentCompositeType) {\n  var instance;\n  if (\"production\" !== process.env.NODE_ENV) {\n    \"production\" !== process.env.NODE_ENV ? warning(element && (typeof element.type === 'function' || typeof element.type === 'string'), 'Only functions or strings can be mounted as React components.') : null;\n\n    // Resolve mock instances\n    if (element.type._mockedReactClassConstructor) {\n      // If this is a mocked class, we treat the legacy factory as if it was the\n      // class constructor for future proofing unit tests. Because this might\n      // be mocked as a legacy factory, we ignore any warnings triggerd by\n      // this temporary hack.\n      ReactLegacyElement._isLegacyCallWarningEnabled = false;\n      try {\n        instance = new element.type._mockedReactClassConstructor(element.props);\n      } finally {\n        ReactLegacyElement._isLegacyCallWarningEnabled = true;\n      }\n\n      // If the mock implementation was a legacy factory, then it returns a\n      // element. We need to turn this into a real component instance.\n      if (ReactElement.isValidElement(instance)) {\n        instance = new instance.type(instance.props);\n      }\n      var render = instance.render;\n      if (!render) {\n        // For auto-mocked factories, the prototype isn't shimmed and therefore\n        // there is no render function on the instance. We replace the whole\n        // component with an empty component instance instead.\n        element = ReactEmptyComponent.getEmptyComponent();\n      } else {\n        if (render._isMockFunction && !render._getMockImplementation()) {\n          // Auto-mocked components may have a prototype with a mocked render\n          // function. For those, we'll need to mock the result of the render\n          // since we consider undefined to be invalid results from render.\n          render.mockImplementation(ReactEmptyComponent.getEmptyComponent);\n        }\n        instance.construct(element);\n        return instance;\n      }\n    }\n  }\n\n  // Special case string values\n  if (typeof element.type === 'string') {\n    instance = ReactNativeComponent.createInstanceForTag(element.type, element.props, parentCompositeType);\n  } else {\n    // Normal case for non-mocks and non-strings\n    instance = new element.type(element.props);\n  }\n  if (\"production\" !== process.env.NODE_ENV) {\n    \"production\" !== process.env.NODE_ENV ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function', 'Only React Components can be mounted.') : null;\n  }\n\n  // This actually sets up the internal instance. This will become decoupled\n  // from the public instance in a future diff.\n  instance.construct(element);\n  return instance;\n}\nmodule.exports = instantiateReactComponent;","map":{"version":3,"names":["warning","require","ReactElement","ReactLegacyElement","ReactNativeComponent","ReactEmptyComponent","instantiateReactComponent","element","parentCompositeType","instance","process","env","NODE_ENV","type","_mockedReactClassConstructor","_isLegacyCallWarningEnabled","props","isValidElement","render","getEmptyComponent","_isMockFunction","_getMockImplementation","mockImplementation","construct","createInstanceForTag","mountComponent","receiveComponent","module","exports"],"sources":["/home/guilherme/Faculdade/LP2/Projeto_Farmacia/projeto-farmacia-app/node_modules/react-checkbox/node_modules/react/lib/instantiateReactComponent.js"],"sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar warning = require(\"./warning\");\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactLegacyElement = require(\"./ReactLegacyElement\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\n\n/**\n * Given an `element` create an instance that will actually be mounted.\n *\n * @param {object} element\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(element, parentCompositeType) {\n  var instance;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      element && (typeof element.type === 'function' ||\n                     typeof element.type === 'string'),\n      'Only functions or strings can be mounted as React components.'\n    ) : null);\n\n    // Resolve mock instances\n    if (element.type._mockedReactClassConstructor) {\n      // If this is a mocked class, we treat the legacy factory as if it was the\n      // class constructor for future proofing unit tests. Because this might\n      // be mocked as a legacy factory, we ignore any warnings triggerd by\n      // this temporary hack.\n      ReactLegacyElement._isLegacyCallWarningEnabled = false;\n      try {\n        instance = new element.type._mockedReactClassConstructor(\n          element.props\n        );\n      } finally {\n        ReactLegacyElement._isLegacyCallWarningEnabled = true;\n      }\n\n      // If the mock implementation was a legacy factory, then it returns a\n      // element. We need to turn this into a real component instance.\n      if (ReactElement.isValidElement(instance)) {\n        instance = new instance.type(instance.props);\n      }\n\n      var render = instance.render;\n      if (!render) {\n        // For auto-mocked factories, the prototype isn't shimmed and therefore\n        // there is no render function on the instance. We replace the whole\n        // component with an empty component instance instead.\n        element = ReactEmptyComponent.getEmptyComponent();\n      } else {\n        if (render._isMockFunction && !render._getMockImplementation()) {\n          // Auto-mocked components may have a prototype with a mocked render\n          // function. For those, we'll need to mock the result of the render\n          // since we consider undefined to be invalid results from render.\n          render.mockImplementation(\n            ReactEmptyComponent.getEmptyComponent\n          );\n        }\n        instance.construct(element);\n        return instance;\n      }\n    }\n  }\n\n  // Special case string values\n  if (typeof element.type === 'string') {\n    instance = ReactNativeComponent.createInstanceForTag(\n      element.type,\n      element.props,\n      parentCompositeType\n    );\n  } else {\n    // Normal case for non-mocks and non-strings\n    instance = new element.type(element.props);\n  }\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof instance.construct === 'function' &&\n      typeof instance.mountComponent === 'function' &&\n      typeof instance.receiveComponent === 'function',\n      'Only React Components can be mounted.'\n    ) : null);\n  }\n\n  // This actually sets up the internal instance. This will become decoupled\n  // from the public instance in a future diff.\n  instance.construct(element);\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AAElC,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AACxD,IAAIG,oBAAoB,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AAC5D,IAAII,mBAAmB,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,yBAAyBA,CAACC,OAAO,EAAEC,mBAAmB,EAAE;EAC/D,IAAIC,QAAQ;EAEZ,IAAI,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,EAAE;IACxC,YAAY,KAAKF,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGZ,OAAO,CAC9CO,OAAO,KAAK,OAAOA,OAAO,CAACM,IAAI,KAAK,UAAU,IAC/B,OAAON,OAAO,CAACM,IAAI,KAAK,QAAQ,CAAC,EAChD,+DACF,CAAC,GAAG,IAAI;;IAER;IACA,IAAIN,OAAO,CAACM,IAAI,CAACC,4BAA4B,EAAE;MAC7C;MACA;MACA;MACA;MACAX,kBAAkB,CAACY,2BAA2B,GAAG,KAAK;MACtD,IAAI;QACFN,QAAQ,GAAG,IAAIF,OAAO,CAACM,IAAI,CAACC,4BAA4B,CACtDP,OAAO,CAACS,KACV,CAAC;MACH,CAAC,SAAS;QACRb,kBAAkB,CAACY,2BAA2B,GAAG,IAAI;MACvD;;MAEA;MACA;MACA,IAAIb,YAAY,CAACe,cAAc,CAACR,QAAQ,CAAC,EAAE;QACzCA,QAAQ,GAAG,IAAIA,QAAQ,CAACI,IAAI,CAACJ,QAAQ,CAACO,KAAK,CAAC;MAC9C;MAEA,IAAIE,MAAM,GAAGT,QAAQ,CAACS,MAAM;MAC5B,IAAI,CAACA,MAAM,EAAE;QACX;QACA;QACA;QACAX,OAAO,GAAGF,mBAAmB,CAACc,iBAAiB,CAAC,CAAC;MACnD,CAAC,MAAM;QACL,IAAID,MAAM,CAACE,eAAe,IAAI,CAACF,MAAM,CAACG,sBAAsB,CAAC,CAAC,EAAE;UAC9D;UACA;UACA;UACAH,MAAM,CAACI,kBAAkB,CACvBjB,mBAAmB,CAACc,iBACtB,CAAC;QACH;QACAV,QAAQ,CAACc,SAAS,CAAChB,OAAO,CAAC;QAC3B,OAAOE,QAAQ;MACjB;IACF;EACF;;EAEA;EACA,IAAI,OAAOF,OAAO,CAACM,IAAI,KAAK,QAAQ,EAAE;IACpCJ,QAAQ,GAAGL,oBAAoB,CAACoB,oBAAoB,CAClDjB,OAAO,CAACM,IAAI,EACZN,OAAO,CAACS,KAAK,EACbR,mBACF,CAAC;EACH,CAAC,MAAM;IACL;IACAC,QAAQ,GAAG,IAAIF,OAAO,CAACM,IAAI,CAACN,OAAO,CAACS,KAAK,CAAC;EAC5C;EAEA,IAAI,YAAY,KAAKN,OAAO,CAACC,GAAG,CAACC,QAAQ,EAAE;IACxC,YAAY,KAAKF,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGZ,OAAO,CAC9C,OAAOS,QAAQ,CAACc,SAAS,KAAK,UAAU,IACxC,OAAOd,QAAQ,CAACgB,cAAc,KAAK,UAAU,IAC7C,OAAOhB,QAAQ,CAACiB,gBAAgB,KAAK,UAAU,EAC/C,uCACF,CAAC,GAAG,IAAI;EACV;;EAEA;EACA;EACAjB,QAAQ,CAACc,SAAS,CAAChB,OAAO,CAAC;EAE3B,OAAOE,QAAQ;AACjB;AAEAkB,MAAM,CAACC,OAAO,GAAGtB,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}