{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n\"use strict\";\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactDOM = require(\"./ReactDOM\");\nvar keyMirror = require(\"./keyMirror\");\n\n// Store a reference to the <button> `ReactDOMComponent`. TODO: use string\nvar button = ReactElement.createFactory(ReactDOM.button.type);\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMButton',\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n  render: function () {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) && (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n    return button(props, this.props.children);\n  }\n});\nmodule.exports = ReactDOMButton;","map":{"version":3,"names":["AutoFocusMixin","require","ReactBrowserComponentMixin","ReactCompositeComponent","ReactElement","ReactDOM","keyMirror","button","createFactory","type","mouseListenerNames","onClick","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","onClickCapture","onDoubleClickCapture","onMouseDownCapture","onMouseMoveCapture","onMouseUpCapture","ReactDOMButton","createClass","displayName","mixins","render","props","key","hasOwnProperty","disabled","children","module","exports"],"sources":["/home/guilherme/Faculdade/LP2/Projeto_Farmacia/projeto-farmacia-app/node_modules/react-checkbox/node_modules/react/lib/ReactDOMButton.js"],"sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n\"use strict\";\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar keyMirror = require(\"./keyMirror\");\n\n// Store a reference to the <button> `ReactDOMComponent`. TODO: use string\nvar button = ReactElement.createFactory(ReactDOM.button.type);\n\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMButton',\n\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n\n  render: function() {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) &&\n          (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMButton;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIC,0BAA0B,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AACxE,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAClE,IAAIG,YAAY,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAII,QAAQ,GAAGJ,OAAO,CAAC,YAAY,CAAC;AAEpC,IAAIK,SAAS,GAAGL,OAAO,CAAC,aAAa,CAAC;;AAEtC;AACA,IAAIM,MAAM,GAAGH,YAAY,CAACI,aAAa,CAACH,QAAQ,CAACE,MAAM,CAACE,IAAI,CAAC;AAE7D,IAAIC,kBAAkB,GAAGJ,SAAS,CAAC;EACjCK,OAAO,EAAE,IAAI;EACbC,aAAa,EAAE,IAAI;EACnBC,WAAW,EAAE,IAAI;EACjBC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE,IAAI;EACfC,cAAc,EAAE,IAAI;EACpBC,oBAAoB,EAAE,IAAI;EAC1BC,kBAAkB,EAAE,IAAI;EACxBC,kBAAkB,EAAE,IAAI;EACxBC,gBAAgB,EAAE;AACpB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAGlB,uBAAuB,CAACmB,WAAW,CAAC;EACvDC,WAAW,EAAE,gBAAgB;EAE7BC,MAAM,EAAE,CAACxB,cAAc,EAAEE,0BAA0B,CAAC;EAEpDuB,MAAM,EAAE,SAAAA,CAAA,EAAW;IACjB,IAAIC,KAAK,GAAG,CAAC,CAAC;;IAEd;IACA,KAAK,IAAIC,GAAG,IAAI,IAAI,CAACD,KAAK,EAAE;MAC1B,IAAI,IAAI,CAACA,KAAK,CAACE,cAAc,CAACD,GAAG,CAAC,KAC7B,CAAC,IAAI,CAACD,KAAK,CAACG,QAAQ,IAAI,CAACnB,kBAAkB,CAACiB,GAAG,CAAC,CAAC,EAAE;QACtDD,KAAK,CAACC,GAAG,CAAC,GAAG,IAAI,CAACD,KAAK,CAACC,GAAG,CAAC;MAC9B;IACF;IAEA,OAAOpB,MAAM,CAACmB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACI,QAAQ,CAAC;EAC3C;AAEF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}