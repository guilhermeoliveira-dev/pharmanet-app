{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactDOM = require(\"./ReactDOM\");\n\n// Store a reference to the <form> `ReactDOMComponent`. TODO: use string\nvar form = ReactElement.createFactory(ReactDOM.form.type);\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMForm',\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n  render: function () {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n  componentDidMount: function () {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\nmodule.exports = ReactDOMForm;","map":{"version":3,"names":["EventConstants","require","LocalEventTrapMixin","ReactBrowserComponentMixin","ReactCompositeComponent","ReactElement","ReactDOM","form","createFactory","type","ReactDOMForm","createClass","displayName","mixins","render","props","componentDidMount","trapBubbledEvent","topLevelTypes","topReset","topSubmit","module","exports"],"sources":["/home/guilherme/Faculdade/LP2/Projeto_Farmacia/projeto-farmacia-app/node_modules/react-checkbox/node_modules/react/lib/ReactDOMForm.js"],"sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactDOM = require(\"./ReactDOM\");\n\n// Store a reference to the <form> `ReactDOMComponent`. TODO: use string\nvar form = ReactElement.createFactory(ReactDOM.form.type);\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMForm',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\n\nmodule.exports = ReactDOMForm;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC1D,IAAIE,0BAA0B,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AACxE,IAAIG,uBAAuB,GAAGH,OAAO,CAAC,2BAA2B,CAAC;AAClE,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIK,QAAQ,GAAGL,OAAO,CAAC,YAAY,CAAC;;AAEpC;AACA,IAAIM,IAAI,GAAGF,YAAY,CAACG,aAAa,CAACF,QAAQ,CAACC,IAAI,CAACE,IAAI,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAGN,uBAAuB,CAACO,WAAW,CAAC;EACrDC,WAAW,EAAE,cAAc;EAE3BC,MAAM,EAAE,CAACV,0BAA0B,EAAED,mBAAmB,CAAC;EAEzDY,MAAM,EAAE,SAAAA,CAAA,EAAW;IACjB;IACA;IACA;IACA,OAAOP,IAAI,CAAC,IAAI,CAACQ,KAAK,CAAC;EACzB,CAAC;EAEDC,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC5B,IAAI,CAACC,gBAAgB,CAACjB,cAAc,CAACkB,aAAa,CAACC,QAAQ,EAAE,OAAO,CAAC;IACrE,IAAI,CAACF,gBAAgB,CAACjB,cAAc,CAACkB,aAAa,CAACE,SAAS,EAAE,QAAQ,CAAC;EACzE;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}