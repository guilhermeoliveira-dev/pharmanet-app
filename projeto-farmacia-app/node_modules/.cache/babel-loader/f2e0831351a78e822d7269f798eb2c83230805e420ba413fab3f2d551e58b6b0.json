{"ast":null,"code":"/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n\"use strict\";\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar monitorCodeUse = require(\"./monitorCodeUse\");\nvar warning = require(\"./warning\");\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {\n  'react_key_warning': {},\n  'react_numeric_key_warning': {}\n};\nvar ownerHasMonitoredObjectMap = {};\nvar loggedTypeFailures = {};\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return current && current.constructor.displayName || undefined;\n}\n\n/**\n * Warn if the component doesn't have an explicit key assigned to it.\n * This component is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactComponent} component Component that requires a key.\n * @param {*} parentType component's parent's type.\n */\nfunction validateExplicitKey(component, parentType) {\n  if (component._store.validated || component.key != null) {\n    return;\n  }\n  component._store.validated = true;\n  warnAndMonitorForKeyUse('react_key_warning', 'Each child in an array should have a unique \"key\" prop.', component, parentType);\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactComponent} component Component that requires a key.\n * @param {*} parentType component's parent's type.\n */\nfunction validatePropertyKey(name, component, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse('react_numeric_key_warning', 'Child objects should have non-numeric keys so ordering is preserved.', component, parentType);\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} warningID The id used when logging.\n * @param {string} message The base warning that gets output.\n * @param {ReactComponent} component Component that requires a key.\n * @param {*} parentType component's parent's type.\n */\nfunction warnAndMonitorForKeyUse(warningID, message, component, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = parentType.displayName;\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[warningID];\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n  message += ownerName ? \" Check the render method of \" + ownerName + \".\" : \" Check the renderComponent call using <\" + parentName + \">.\";\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerName = null;\n  if (component._owner && component._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    childOwnerName = component._owner.constructor.displayName;\n    message += \" It was passed a child from \" + childOwnerName + \".\";\n  }\n  message += ' See http://fb.me/react-warning-keys for more information.';\n  monitorCodeUse(warningID, {\n    component: useName,\n    componentOwner: childOwnerName\n  });\n  console.warn(message);\n}\n\n/**\n * Log that we're using an object map. We're considering deprecating this\n * feature and replace it with proper Map and ImmutableMap data structures.\n *\n * @internal\n */\nfunction monitorUseOfObjectMap() {\n  var currentName = getCurrentOwnerDisplayName() || '';\n  if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {\n    return;\n  }\n  ownerHasMonitoredObjectMap[currentName] = true;\n  monitorCodeUse('react_object_map_children');\n}\n\n/**\n * Ensure that every component either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {*} component Statically passed child of any type.\n * @param {*} parentType component's parent's type.\n * @return {boolean}\n */\nfunction validateChildKeys(component, parentType) {\n  if (Array.isArray(component)) {\n    for (var i = 0; i < component.length; i++) {\n      var child = component[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(component)) {\n    // This component was passed in a valid location.\n    component._store.validated = true;\n  } else if (component && typeof component === 'object') {\n    monitorUseOfObjectMap();\n    for (var name in component) {\n      validatePropertyKey(name, component[name], parentType);\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        // This will soon use the warning module\n        monitorCodeUse('react_failed_descriptor_type_check', {\n          message: error.message\n        });\n      }\n    }\n  }\n}\nvar ReactElementValidator = {\n  createElement: function (type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    \"production\" !== process.env.NODE_ENV ? warning(type != null, 'React.createElement: type should not be null or undefined. It should ' + 'be a string (for DOM elements) or a ReactClass (for composite ' + 'components).') : null;\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n    if (type) {\n      var name = type.displayName;\n      if (type.propTypes) {\n        checkPropTypes(name, type.propTypes, element.props, ReactPropTypeLocations.prop);\n      }\n      if (type.contextTypes) {\n        checkPropTypes(name, type.contextTypes, element._context, ReactPropTypeLocations.context);\n      }\n    }\n    return element;\n  },\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n    validatedFactory.type = type;\n    return validatedFactory;\n  }\n};\nmodule.exports = ReactElementValidator;","map":{"version":3,"names":["ReactElement","require","ReactPropTypeLocations","ReactCurrentOwner","monitorCodeUse","warning","ownerHasKeyUseWarning","ownerHasMonitoredObjectMap","loggedTypeFailures","NUMERIC_PROPERTY_REGEX","getCurrentOwnerDisplayName","current","constructor","displayName","undefined","validateExplicitKey","component","parentType","_store","validated","key","warnAndMonitorForKeyUse","validatePropertyKey","name","test","warningID","message","ownerName","parentName","useName","memoizer","hasOwnProperty","childOwnerName","_owner","componentOwner","console","warn","monitorUseOfObjectMap","currentName","validateChildKeys","Array","isArray","i","length","child","isValidElement","checkPropTypes","componentName","propTypes","props","location","propName","error","ex","Error","ReactElementValidator","createElement","type","children","process","env","NODE_ENV","element","apply","arguments","prop","contextTypes","_context","context","createFactory","validatedFactory","bind","module","exports"],"sources":["/home/guilherme/Faculdade/LP2/Projeto_Farmacia/projeto-farmacia-app/node_modules/react-checkbox/node_modules/react/lib/ReactElementValidator.js"],"sourcesContent":["/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n\"use strict\";\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar monitorCodeUse = require(\"./monitorCodeUse\");\nvar warning = require(\"./warning\");\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {\n  'react_key_warning': {},\n  'react_numeric_key_warning': {}\n};\nvar ownerHasMonitoredObjectMap = {};\n\nvar loggedTypeFailures = {};\n\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return current && current.constructor.displayName || undefined;\n}\n\n/**\n * Warn if the component doesn't have an explicit key assigned to it.\n * This component is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactComponent} component Component that requires a key.\n * @param {*} parentType component's parent's type.\n */\nfunction validateExplicitKey(component, parentType) {\n  if (component._store.validated || component.key != null) {\n    return;\n  }\n  component._store.validated = true;\n\n  warnAndMonitorForKeyUse(\n    'react_key_warning',\n    'Each child in an array should have a unique \"key\" prop.',\n    component,\n    parentType\n  );\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactComponent} component Component that requires a key.\n * @param {*} parentType component's parent's type.\n */\nfunction validatePropertyKey(name, component, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse(\n    'react_numeric_key_warning',\n    'Child objects should have non-numeric keys so ordering is preserved.',\n    component,\n    parentType\n  );\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} warningID The id used when logging.\n * @param {string} message The base warning that gets output.\n * @param {ReactComponent} component Component that requires a key.\n * @param {*} parentType component's parent's type.\n */\nfunction warnAndMonitorForKeyUse(warningID, message, component, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = parentType.displayName;\n\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[warningID];\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n\n  message += ownerName ?\n    (\" Check the render method of \" + ownerName + \".\") :\n    (\" Check the renderComponent call using <\" + parentName + \">.\");\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerName = null;\n  if (component._owner && component._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    childOwnerName = component._owner.constructor.displayName;\n\n    message += (\" It was passed a child from \" + childOwnerName + \".\");\n  }\n\n  message += ' See http://fb.me/react-warning-keys for more information.';\n  monitorCodeUse(warningID, {\n    component: useName,\n    componentOwner: childOwnerName\n  });\n  console.warn(message);\n}\n\n/**\n * Log that we're using an object map. We're considering deprecating this\n * feature and replace it with proper Map and ImmutableMap data structures.\n *\n * @internal\n */\nfunction monitorUseOfObjectMap() {\n  var currentName = getCurrentOwnerDisplayName() || '';\n  if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {\n    return;\n  }\n  ownerHasMonitoredObjectMap[currentName] = true;\n  monitorCodeUse('react_object_map_children');\n}\n\n/**\n * Ensure that every component either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {*} component Statically passed child of any type.\n * @param {*} parentType component's parent's type.\n * @return {boolean}\n */\nfunction validateChildKeys(component, parentType) {\n  if (Array.isArray(component)) {\n    for (var i = 0; i < component.length; i++) {\n      var child = component[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(component)) {\n    // This component was passed in a valid location.\n    component._store.validated = true;\n  } else if (component && typeof component === 'object') {\n    monitorUseOfObjectMap();\n    for (var name in component) {\n      validatePropertyKey(name, component[name], parentType);\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        // This will soon use the warning module\n        monitorCodeUse(\n          'react_failed_descriptor_type_check',\n          { message: error.message }\n        );\n      }\n    }\n  }\n}\n\nvar ReactElementValidator = {\n\n  createElement: function(type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      type != null,\n      'React.createElement: type should not be null or undefined. It should ' +\n        'be a string (for DOM elements) or a ReactClass (for composite ' +\n        'components).'\n    ) : null);\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    if (type) {\n      var name = type.displayName;\n      if (type.propTypes) {\n        checkPropTypes(\n          name,\n          type.propTypes,\n          element.props,\n          ReactPropTypeLocations.prop\n        );\n      }\n      if (type.contextTypes) {\n        checkPropTypes(\n          name,\n          type.contextTypes,\n          element._context,\n          ReactPropTypeLocations.context\n        );\n      }\n    }\n    return element;\n  },\n\n  createFactory: function(type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(\n      null,\n      type\n    );\n    validatedFactory.type = type;\n    return validatedFactory;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}