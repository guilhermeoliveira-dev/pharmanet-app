{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createFullPageComponent\n * @typechecks\n */\n\n\"use strict\";\n\n// Defeat circular references by requiring this directly.\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Create a component that will throw an exception when unmounted.\n *\n * Components like <html> <head> and <body> can't be removed or added\n * easily in a cross-browser way, however it's valuable to be able to\n * take advantage of React's reconciliation for styling and <title>\n * management. So we just document it and throw in dangerous cases.\n *\n * @param {string} tag The tag to wrap\n * @return {function} convenience constructor of new component\n */\nfunction createFullPageComponent(tag) {\n  var elementFactory = ReactElement.createFactory(tag);\n  var FullPageComponent = ReactCompositeComponent.createClass({\n    displayName: 'ReactFullPageComponent' + tag,\n    componentWillUnmount: function () {\n      \"production\" !== process.env.NODE_ENV ? invariant(false, '%s tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, <head>, ' + 'and <body>) reliably and efficiently. To fix this, have a single ' + 'top-level component that never unmounts render these elements.', this.constructor.displayName) : invariant(false);\n    },\n    render: function () {\n      return elementFactory(this.props);\n    }\n  });\n  return FullPageComponent;\n}\nmodule.exports = createFullPageComponent;","map":{"version":3,"names":["ReactCompositeComponent","require","ReactElement","invariant","createFullPageComponent","tag","elementFactory","createFactory","FullPageComponent","createClass","displayName","componentWillUnmount","process","env","NODE_ENV","constructor","render","props","module","exports"],"sources":["/home/guilherme/Faculdade/LP2/Projeto_Farmacia/projeto-farmacia-app/node_modules/react-checkbox/node_modules/react/lib/createFullPageComponent.js"],"sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createFullPageComponent\n * @typechecks\n */\n\n\"use strict\";\n\n// Defeat circular references by requiring this directly.\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Create a component that will throw an exception when unmounted.\n *\n * Components like <html> <head> and <body> can't be removed or added\n * easily in a cross-browser way, however it's valuable to be able to\n * take advantage of React's reconciliation for styling and <title>\n * management. So we just document it and throw in dangerous cases.\n *\n * @param {string} tag The tag to wrap\n * @return {function} convenience constructor of new component\n */\nfunction createFullPageComponent(tag) {\n  var elementFactory = ReactElement.createFactory(tag);\n\n  var FullPageComponent = ReactCompositeComponent.createClass({\n    displayName: 'ReactFullPageComponent' + tag,\n\n    componentWillUnmount: function() {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        false,\n        '%s tried to unmount. Because of cross-browser quirks it is ' +\n        'impossible to unmount some top-level components (eg <html>, <head>, ' +\n        'and <body>) reliably and efficiently. To fix this, have a single ' +\n        'top-level component that never unmounts render these elements.',\n        this.constructor.displayName\n      ) : invariant(false));\n    },\n\n    render: function() {\n      return elementFactory(this.props);\n    }\n  });\n\n  return FullPageComponent;\n}\n\nmodule.exports = createFullPageComponent;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAClE,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE5C,IAAIE,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,uBAAuBA,CAACC,GAAG,EAAE;EACpC,IAAIC,cAAc,GAAGJ,YAAY,CAACK,aAAa,CAACF,GAAG,CAAC;EAEpD,IAAIG,iBAAiB,GAAGR,uBAAuB,CAACS,WAAW,CAAC;IAC1DC,WAAW,EAAE,wBAAwB,GAAGL,GAAG;IAE3CM,oBAAoB,EAAE,SAAAA,CAAA,EAAW;MAC9B,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGX,SAAS,CAChD,KAAK,EACL,6DAA6D,GAC7D,sEAAsE,GACtE,mEAAmE,GACnE,gEAAgE,EAChE,IAAI,CAACY,WAAW,CAACL,WACnB,CAAC,GAAGP,SAAS,CAAC,KAAK,CAAC;IACtB,CAAC;IAEDa,MAAM,EAAE,SAAAA,CAAA,EAAW;MACjB,OAAOV,cAAc,CAAC,IAAI,CAACW,KAAK,CAAC;IACnC;EACF,CAAC,CAAC;EAEF,OAAOT,iBAAiB;AAC1B;AAEAU,MAAM,CAACC,OAAO,GAAGf,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}