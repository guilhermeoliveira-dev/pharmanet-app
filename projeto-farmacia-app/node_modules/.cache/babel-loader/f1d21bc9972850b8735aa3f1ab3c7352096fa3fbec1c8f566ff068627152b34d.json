{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n\"use strict\";\n\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactMount = require(\"./ReactMount\");\nvar invariant = require(\"./invariant\");\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function () {\n    \"production\" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'getDOMNode(): A component must be mounted to have a DOM node.') : invariant(this.isMounted());\n    if (ReactEmptyComponent.isNullComponentID(this._rootNodeID)) {\n      return null;\n    }\n    return ReactMount.getNode(this._rootNodeID);\n  }\n};\nmodule.exports = ReactBrowserComponentMixin;","map":{"version":3,"names":["ReactEmptyComponent","require","ReactMount","invariant","ReactBrowserComponentMixin","getDOMNode","process","env","NODE_ENV","isMounted","isNullComponentID","_rootNodeID","getNode","module","exports"],"sources":["/home/guilherme/Faculdade/LP2/Projeto_Farmacia/projeto-farmacia-app/node_modules/react-checkbox/node_modules/react/lib/ReactBrowserComponentMixin.js"],"sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n\"use strict\";\n\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactMount = require(\"./ReactMount\");\n\nvar invariant = require(\"./invariant\");\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function() {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      this.isMounted(),\n      'getDOMNode(): A component must be mounted to have a DOM node.'\n    ) : invariant(this.isMounted()));\n    if (ReactEmptyComponent.isNullComponentID(this._rootNodeID)) {\n      return null;\n    }\n    return ReactMount.getNode(this._rootNodeID);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC1D,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;AAExC,IAAIE,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEtC,IAAIG,0BAA0B,GAAG;EAC/B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,UAAU,EAAE,SAAAA,CAAA,EAAW;IACpB,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGL,SAAS,CAChD,IAAI,CAACM,SAAS,CAAC,CAAC,EAChB,+DACF,CAAC,GAAGN,SAAS,CAAC,IAAI,CAACM,SAAS,CAAC,CAAC,CAAC;IAC/B,IAAIT,mBAAmB,CAACU,iBAAiB,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;MAC3D,OAAO,IAAI;IACb;IACA,OAAOT,UAAU,CAACU,OAAO,CAAC,IAAI,CAACD,WAAW,CAAC;EAC7C;AACF,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGV,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}