{"ast":null,"code":"/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLegacyElement\n */\n\n\"use strict\";\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar invariant = require(\"./invariant\");\nvar monitorCodeUse = require(\"./monitorCodeUse\");\nvar warning = require(\"./warning\");\nvar legacyFactoryLogs = {};\nfunction warnForLegacyFactoryCall() {\n  if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {\n    return;\n  }\n  var owner = ReactCurrentOwner.current;\n  var name = owner && owner.constructor ? owner.constructor.displayName : '';\n  if (!name) {\n    name = 'Something';\n  }\n  if (legacyFactoryLogs.hasOwnProperty(name)) {\n    return;\n  }\n  legacyFactoryLogs[name] = true;\n  \"production\" !== process.env.NODE_ENV ? warning(false, name + ' is calling a React component directly. ' + 'Use a factory or JSX instead. See: http://fb.me/react-legacyfactory') : null;\n  monitorCodeUse('react_legacy_factory_call', {\n    version: 3,\n    name: name\n  });\n}\nfunction warnForPlainFunctionType(type) {\n  var isReactClass = type.prototype && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n  if (isReactClass) {\n    \"production\" !== process.env.NODE_ENV ? warning(false, 'Did not expect to get a React class here. Use `Component` instead ' + 'of `Component.type` or `this.constructor`.') : null;\n  } else {\n    if (!type._reactWarnedForThisType) {\n      try {\n        type._reactWarnedForThisType = true;\n      } catch (x) {\n        // just incase this is a frozen object or some special object\n      }\n      monitorCodeUse('react_non_component_in_jsx', {\n        version: 3,\n        name: type.name\n      });\n    }\n    \"production\" !== process.env.NODE_ENV ? warning(false, 'This JSX uses a plain function. Only React components are ' + 'valid in React\\'s JSX transform.') : null;\n  }\n}\nfunction warnForNonLegacyFactory(type) {\n  \"production\" !== process.env.NODE_ENV ? warning(false, 'Do not pass React.DOM.' + type.type + ' to JSX or createFactory. ' + 'Use the string \"' + type.type + '\" instead.') : null;\n}\n\n/**\n * Transfer static properties from the source to the target. Functions are\n * rebound to have this reflect the original source.\n */\nfunction proxyStaticMethods(target, source) {\n  if (typeof source !== 'function') {\n    return;\n  }\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var value = source[key];\n      if (typeof value === 'function') {\n        var bound = value.bind(source);\n        // Copy any properties defined on the function, such as `isRequired` on\n        // a PropTypes validator.\n        for (var k in value) {\n          if (value.hasOwnProperty(k)) {\n            bound[k] = value[k];\n          }\n        }\n        target[key] = bound;\n      } else {\n        target[key] = value;\n      }\n    }\n  }\n}\n\n// We use an object instead of a boolean because booleans are ignored by our\n// mocking libraries when these factories gets mocked.\nvar LEGACY_MARKER = {};\nvar NON_LEGACY_MARKER = {};\nvar ReactLegacyElementFactory = {};\nReactLegacyElementFactory.wrapCreateFactory = function (createFactory) {\n  var legacyCreateFactory = function (type) {\n    if (typeof type !== 'function') {\n      // Non-function types cannot be legacy factories\n      return createFactory(type);\n    }\n    if (type.isReactNonLegacyFactory) {\n      // This is probably a factory created by ReactDOM we unwrap it to get to\n      // the underlying string type. It shouldn't have been passed here so we\n      // warn.\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnForNonLegacyFactory(type);\n      }\n      return createFactory(type.type);\n    }\n    if (type.isReactLegacyFactory) {\n      // This is probably a legacy factory created by ReactCompositeComponent.\n      // We unwrap it to get to the underlying class.\n      return createFactory(type.type);\n    }\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForPlainFunctionType(type);\n    }\n\n    // Unless it's a legacy factory, then this is probably a plain function,\n    // that is expecting to be invoked by JSX. We can just return it as is.\n    return type;\n  };\n  return legacyCreateFactory;\n};\nReactLegacyElementFactory.wrapCreateElement = function (createElement) {\n  var legacyCreateElement = function (type, props, children) {\n    if (typeof type !== 'function') {\n      // Non-function types cannot be legacy factories\n      return createElement.apply(this, arguments);\n    }\n    var args;\n    if (type.isReactNonLegacyFactory) {\n      // This is probably a factory created by ReactDOM we unwrap it to get to\n      // the underlying string type. It shouldn't have been passed here so we\n      // warn.\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnForNonLegacyFactory(type);\n      }\n      args = Array.prototype.slice.call(arguments, 0);\n      args[0] = type.type;\n      return createElement.apply(this, args);\n    }\n    if (type.isReactLegacyFactory) {\n      // This is probably a legacy factory created by ReactCompositeComponent.\n      // We unwrap it to get to the underlying class.\n      if (type._isMockFunction) {\n        // If this is a mock function, people will expect it to be called. We\n        // will actually call the original mock factory function instead. This\n        // future proofs unit testing that assume that these are classes.\n        type.type._mockedReactClassConstructor = type;\n      }\n      args = Array.prototype.slice.call(arguments, 0);\n      args[0] = type.type;\n      return createElement.apply(this, args);\n    }\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForPlainFunctionType(type);\n    }\n\n    // This is being called with a plain function we should invoke it\n    // immediately as if this was used with legacy JSX.\n    return type.apply(null, Array.prototype.slice.call(arguments, 1));\n  };\n  return legacyCreateElement;\n};\nReactLegacyElementFactory.wrapFactory = function (factory) {\n  \"production\" !== process.env.NODE_ENV ? invariant(typeof factory === 'function', 'This is suppose to accept a element factory') : invariant(typeof factory === 'function');\n  var legacyElementFactory = function (config, children) {\n    // This factory should not be called when JSX is used. Use JSX instead.\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForLegacyFactoryCall();\n    }\n    return factory.apply(this, arguments);\n  };\n  proxyStaticMethods(legacyElementFactory, factory.type);\n  legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;\n  legacyElementFactory.type = factory.type;\n  return legacyElementFactory;\n};\n\n// This is used to mark a factory that will remain. E.g. we're allowed to call\n// it as a function. However, you're not suppose to pass it to createElement\n// or createFactory, so it will warn you if you do.\nReactLegacyElementFactory.markNonLegacyFactory = function (factory) {\n  factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;\n  return factory;\n};\n\n// Checks if a factory function is actually a legacy factory pretending to\n// be a class.\nReactLegacyElementFactory.isValidFactory = function (factory) {\n  // TODO: This will be removed and moved into a class validator or something.\n  return typeof factory === 'function' && factory.isReactLegacyFactory === LEGACY_MARKER;\n};\nReactLegacyElementFactory.isValidClass = function (factory) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    \"production\" !== process.env.NODE_ENV ? warning(false, 'isValidClass is deprecated and will be removed in a future release. ' + 'Use a more specific validator instead.') : null;\n  }\n  return ReactLegacyElementFactory.isValidFactory(factory);\n};\nReactLegacyElementFactory._isLegacyCallWarningEnabled = true;\nmodule.exports = ReactLegacyElementFactory;","map":{"version":3,"names":["ReactCurrentOwner","require","invariant","monitorCodeUse","warning","legacyFactoryLogs","warnForLegacyFactoryCall","ReactLegacyElementFactory","_isLegacyCallWarningEnabled","owner","current","name","constructor","displayName","hasOwnProperty","process","env","NODE_ENV","version","warnForPlainFunctionType","type","isReactClass","prototype","mountComponent","receiveComponent","_reactWarnedForThisType","x","warnForNonLegacyFactory","proxyStaticMethods","target","source","key","value","bound","bind","k","LEGACY_MARKER","NON_LEGACY_MARKER","wrapCreateFactory","createFactory","legacyCreateFactory","isReactNonLegacyFactory","isReactLegacyFactory","wrapCreateElement","createElement","legacyCreateElement","props","children","apply","arguments","args","Array","slice","call","_isMockFunction","_mockedReactClassConstructor","wrapFactory","factory","legacyElementFactory","config","markNonLegacyFactory","isValidFactory","isValidClass","module","exports"],"sources":["/home/guilherme/Faculdade/LP2/Projeto_Farmacia/projeto-farmacia-app/node_modules/react-checkbox/node_modules/react/lib/ReactLegacyElement.js"],"sourcesContent":["/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLegacyElement\n */\n\n\"use strict\";\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar invariant = require(\"./invariant\");\nvar monitorCodeUse = require(\"./monitorCodeUse\");\nvar warning = require(\"./warning\");\n\nvar legacyFactoryLogs = {};\nfunction warnForLegacyFactoryCall() {\n  if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {\n    return;\n  }\n  var owner = ReactCurrentOwner.current;\n  var name = owner && owner.constructor ? owner.constructor.displayName : '';\n  if (!name) {\n    name = 'Something';\n  }\n  if (legacyFactoryLogs.hasOwnProperty(name)) {\n    return;\n  }\n  legacyFactoryLogs[name] = true;\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    name + ' is calling a React component directly. ' +\n    'Use a factory or JSX instead. See: http://fb.me/react-legacyfactory'\n  ) : null);\n  monitorCodeUse('react_legacy_factory_call', { version: 3, name: name });\n}\n\nfunction warnForPlainFunctionType(type) {\n  var isReactClass =\n    type.prototype &&\n    typeof type.prototype.mountComponent === 'function' &&\n    typeof type.prototype.receiveComponent === 'function';\n  if (isReactClass) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Did not expect to get a React class here. Use `Component` instead ' +\n      'of `Component.type` or `this.constructor`.'\n    ) : null);\n  } else {\n    if (!type._reactWarnedForThisType) {\n      try {\n        type._reactWarnedForThisType = true;\n      } catch (x) {\n        // just incase this is a frozen object or some special object\n      }\n      monitorCodeUse(\n        'react_non_component_in_jsx',\n        { version: 3, name: type.name }\n      );\n    }\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'This JSX uses a plain function. Only React components are ' +\n      'valid in React\\'s JSX transform.'\n    ) : null);\n  }\n}\n\nfunction warnForNonLegacyFactory(type) {\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Do not pass React.DOM.' + type.type + ' to JSX or createFactory. ' +\n    'Use the string \"' + type.type + '\" instead.'\n  ) : null);\n}\n\n/**\n * Transfer static properties from the source to the target. Functions are\n * rebound to have this reflect the original source.\n */\nfunction proxyStaticMethods(target, source) {\n  if (typeof source !== 'function') {\n    return;\n  }\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var value = source[key];\n      if (typeof value === 'function') {\n        var bound = value.bind(source);\n        // Copy any properties defined on the function, such as `isRequired` on\n        // a PropTypes validator.\n        for (var k in value) {\n          if (value.hasOwnProperty(k)) {\n            bound[k] = value[k];\n          }\n        }\n        target[key] = bound;\n      } else {\n        target[key] = value;\n      }\n    }\n  }\n}\n\n// We use an object instead of a boolean because booleans are ignored by our\n// mocking libraries when these factories gets mocked.\nvar LEGACY_MARKER = {};\nvar NON_LEGACY_MARKER = {};\n\nvar ReactLegacyElementFactory = {};\n\nReactLegacyElementFactory.wrapCreateFactory = function(createFactory) {\n  var legacyCreateFactory = function(type) {\n    if (typeof type !== 'function') {\n      // Non-function types cannot be legacy factories\n      return createFactory(type);\n    }\n\n    if (type.isReactNonLegacyFactory) {\n      // This is probably a factory created by ReactDOM we unwrap it to get to\n      // the underlying string type. It shouldn't have been passed here so we\n      // warn.\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnForNonLegacyFactory(type);\n      }\n      return createFactory(type.type);\n    }\n\n    if (type.isReactLegacyFactory) {\n      // This is probably a legacy factory created by ReactCompositeComponent.\n      // We unwrap it to get to the underlying class.\n      return createFactory(type.type);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForPlainFunctionType(type);\n    }\n\n    // Unless it's a legacy factory, then this is probably a plain function,\n    // that is expecting to be invoked by JSX. We can just return it as is.\n    return type;\n  };\n  return legacyCreateFactory;\n};\n\nReactLegacyElementFactory.wrapCreateElement = function(createElement) {\n  var legacyCreateElement = function(type, props, children) {\n    if (typeof type !== 'function') {\n      // Non-function types cannot be legacy factories\n      return createElement.apply(this, arguments);\n    }\n\n    var args;\n\n    if (type.isReactNonLegacyFactory) {\n      // This is probably a factory created by ReactDOM we unwrap it to get to\n      // the underlying string type. It shouldn't have been passed here so we\n      // warn.\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnForNonLegacyFactory(type);\n      }\n      args = Array.prototype.slice.call(arguments, 0);\n      args[0] = type.type;\n      return createElement.apply(this, args);\n    }\n\n    if (type.isReactLegacyFactory) {\n      // This is probably a legacy factory created by ReactCompositeComponent.\n      // We unwrap it to get to the underlying class.\n      if (type._isMockFunction) {\n        // If this is a mock function, people will expect it to be called. We\n        // will actually call the original mock factory function instead. This\n        // future proofs unit testing that assume that these are classes.\n        type.type._mockedReactClassConstructor = type;\n      }\n      args = Array.prototype.slice.call(arguments, 0);\n      args[0] = type.type;\n      return createElement.apply(this, args);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForPlainFunctionType(type);\n    }\n\n    // This is being called with a plain function we should invoke it\n    // immediately as if this was used with legacy JSX.\n    return type.apply(null, Array.prototype.slice.call(arguments, 1));\n  };\n  return legacyCreateElement;\n};\n\nReactLegacyElementFactory.wrapFactory = function(factory) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof factory === 'function',\n    'This is suppose to accept a element factory'\n  ) : invariant(typeof factory === 'function'));\n  var legacyElementFactory = function(config, children) {\n    // This factory should not be called when JSX is used. Use JSX instead.\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForLegacyFactoryCall();\n    }\n    return factory.apply(this, arguments);\n  };\n  proxyStaticMethods(legacyElementFactory, factory.type);\n  legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;\n  legacyElementFactory.type = factory.type;\n  return legacyElementFactory;\n};\n\n// This is used to mark a factory that will remain. E.g. we're allowed to call\n// it as a function. However, you're not suppose to pass it to createElement\n// or createFactory, so it will warn you if you do.\nReactLegacyElementFactory.markNonLegacyFactory = function(factory) {\n  factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;\n  return factory;\n};\n\n// Checks if a factory function is actually a legacy factory pretending to\n// be a class.\nReactLegacyElementFactory.isValidFactory = function(factory) {\n  // TODO: This will be removed and moved into a class validator or something.\n  return typeof factory === 'function' &&\n    factory.isReactLegacyFactory === LEGACY_MARKER;\n};\n\nReactLegacyElementFactory.isValidClass = function(factory) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'isValidClass is deprecated and will be removed in a future release. ' +\n      'Use a more specific validator instead.'\n    ) : null);\n  }\n  return ReactLegacyElementFactory.isValidFactory(factory);\n};\n\nReactLegacyElementFactory._isLegacyCallWarningEnabled = true;\n\nmodule.exports = ReactLegacyElementFactory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}