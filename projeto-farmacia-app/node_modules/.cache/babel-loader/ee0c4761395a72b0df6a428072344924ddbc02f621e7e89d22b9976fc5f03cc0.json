{"ast":null,"code":"/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n\"use strict\";\n\nvar ReactElement = require(\"./ReactElement\");\nvar invariant = require(\"./invariant\");\nvar component;\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIdsRegistry = {};\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function (emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n\n/**\n * @return {ReactComponent} component The injected empty component.\n */\nfunction getEmptyComponent() {\n  \"production\" !== process.env.NODE_ENV ? invariant(component, 'Trying to return null from a render, but no null placeholder component ' + 'was injected.') : invariant(component);\n  return component();\n}\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIdsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIdsRegistry[id];\n}\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return nullComponentIdsRegistry[id];\n}\nvar ReactEmptyComponent = {\n  deregisterNullComponentID: deregisterNullComponentID,\n  getEmptyComponent: getEmptyComponent,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID,\n  registerNullComponentID: registerNullComponentID\n};\nmodule.exports = ReactEmptyComponent;","map":{"version":3,"names":["ReactElement","require","invariant","component","nullComponentIdsRegistry","ReactEmptyComponentInjection","injectEmptyComponent","emptyComponent","createFactory","getEmptyComponent","process","env","NODE_ENV","registerNullComponentID","id","deregisterNullComponentID","isNullComponentID","ReactEmptyComponent","injection","module","exports"],"sources":["/home/guilherme/Faculdade/LP2/Projeto_Farmacia/projeto-farmacia-app/node_modules/react-checkbox/node_modules/react/lib/ReactEmptyComponent.js"],"sourcesContent":["/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n\"use strict\";\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\nvar component;\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIdsRegistry = {};\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function(emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n\n/**\n * @return {ReactComponent} component The injected empty component.\n */\nfunction getEmptyComponent() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    component,\n    'Trying to return null from a render, but no null placeholder component ' +\n    'was injected.'\n  ) : invariant(component));\n  return component();\n}\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIdsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIdsRegistry[id];\n}\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return nullComponentIdsRegistry[id];\n}\n\nvar ReactEmptyComponent = {\n  deregisterNullComponentID: deregisterNullComponentID,\n  getEmptyComponent: getEmptyComponent,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID,\n  registerNullComponentID: registerNullComponentID\n};\n\nmodule.exports = ReactEmptyComponent;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE5C,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEtC,IAAIE,SAAS;AACb;AACA;AACA,IAAIC,wBAAwB,GAAG,CAAC,CAAC;AAEjC,IAAIC,4BAA4B,GAAG;EACjCC,oBAAoB,EAAE,SAAAA,CAASC,cAAc,EAAE;IAC7CJ,SAAS,GAAGH,YAAY,CAACQ,aAAa,CAACD,cAAc,CAAC;EACxD;AACF,CAAC;;AAED;AACA;AACA;AACA,SAASE,iBAAiBA,CAAA,EAAG;EAC1B,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGV,SAAS,CAChDC,SAAS,EACT,yEAAyE,GACzE,eACF,CAAC,GAAGD,SAAS,CAACC,SAAS,CAAC;EACxB,OAAOA,SAAS,CAAC,CAAC;AACpB;;AAEA;AACA;AACA;AACA;AACA,SAASU,uBAAuBA,CAACC,EAAE,EAAE;EACnCV,wBAAwB,CAACU,EAAE,CAAC,GAAG,IAAI;AACrC;;AAEA;AACA;AACA;AACA;AACA,SAASC,yBAAyBA,CAACD,EAAE,EAAE;EACrC,OAAOV,wBAAwB,CAACU,EAAE,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA,SAASE,iBAAiBA,CAACF,EAAE,EAAE;EAC7B,OAAOV,wBAAwB,CAACU,EAAE,CAAC;AACrC;AAEA,IAAIG,mBAAmB,GAAG;EACxBF,yBAAyB,EAAEA,yBAAyB;EACpDN,iBAAiB,EAAEA,iBAAiB;EACpCS,SAAS,EAAEb,4BAA4B;EACvCW,iBAAiB,EAAEA,iBAAiB;EACpCH,uBAAuB,EAAEA;AAC3B,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAGH,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}